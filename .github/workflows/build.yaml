name: token-plugin-build
on:
  push:
    branches:
      - master
      - gha-ubuntu-20.04
      - ubuntu-20.04
      - ubuntu-20.04-upgrade
      - Devcontainers
  pull_request:
    branches:
      - master
      - gha-ubuntu-20.04
      - ubuntu-20.04
      - ubuntu-20.04-upgrade
      - Devcontainers
  workflow_dispatch:



jobs:
  workflow-setup:
    runs-on: ubuntu-latest
    outputs:
      CACHE_KEY_BUILD: ${{ steps.cache.outputs.CACHE_KEY_BUILD }}
      CACHE_KEY_LINT: ${{ steps.cache.outputs.CACHE_KEY_LINT }}
      DOCKER_FILE_POSTFIX: ${{ steps.cache.outputs.DOCKER_FILE_POSTFIX }}
      # Expose the lowercase version of the GitHub repository name
      # to all subsequent jobs that reference image repositories
      # as the push and pull operations require the URL of the repository
      # to be in lowercase.
      GITHUB_REPOSITORY_NAME: ${{ steps.cache.outputs.GITHUB_REPOSITORY_NAME }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Set outputs
        id: cache
        run: |
          # Convert the GitHub repository name to lowercase
          echo "::set-output name=GITHUB_REPOSITORY_NAME::$(echo ${GITHUB_REPOSITORY,,})"
          # Set variables according to version of ubuntu
          if [[ "${{github.base_ref}}" == "master" || "${{github.ref}}" == "refs/heads/master" ]]; then
            echo "::set-output name=CACHE_KEY_BUILD::${{ hashFiles('.github/workflows/build/Dockerfile.ubuntu-16-04') }}"
            echo "::set-output name=CACHE_KEY_LINT::${{ hashFiles('.github/workflows/lint/Dockerfile.ubuntu-16-04') }}"
            echo "::set-output name=DOCKER_FILE_POSTFIX::ubuntu-16-04"
          fi
          if [[ "${{github.base_ref}}" == "ubuntu-20.04" || "${{github.ref}}" == "refs/heads/ubuntu-20.04" ||  "${{github.base_ref}}" == "ubuntu-20.04-upgrade" || "${{github.ref}}" == "refs/heads/ubuntu-20.04-upgrade" ]]; then
            echo "::set-output name=CACHE_KEY_BUILD::${{ hashFiles('.github/workflows/build/Dockerfile.ubuntu-20-04') }}"
            echo "::set-output name=CACHE_KEY_LINT::${{ hashFiles('.github/workflows/lint/Dockerfile.ubuntu-20-04') }}"
            echo "::set-output name=DOCKER_FILE_POSTFIX::ubuntu-20-04"
          fi

  build-image:
    # Reference to workflow-setup job is required to access its various outputs.
    needs: workflow-setup
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
      CACHE_KEY_BUILD: ${{ needs.workflow-setup.outputs.CACHE_KEY_BUILD }}
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }}
      DOCKER_FILE_POSTFIX: ${{ needs.workflow-setup.outputs.DOCKER_FILE_POSTFIX }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Try load from cache.
        id: cache-image
        uses: actions/cache@v2
        with:
          path: ${GITHUB_WORKSPACE}/cache
          key: ${{ env.CACHE_KEY_BUILD}}

      - name: If NOT found in cache, build and push image.
        if: steps.cache-image.outputs.cache-hit != 'true'
        run: |
          echo ${{ secrets.CR_PAT }} | docker login ghcr.io --username ${{ secrets.CR_USER }} --password-stdin
          docker build -f .github/workflows/build/Dockerfile.${{ env.DOCKER_FILE_POSTFIX }} --no-cache -t ${{ env.GITHUB_REPOSITORY_NAME }}/token-plugin-build:${{ env.CACHE_KEY_BUILD }} .
          docker tag ${{ env.GITHUB_REPOSITORY_NAME }}/token-plugin-build:${{ env.CACHE_KEY_BUILD }} ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/token-plugin-build:${{ env.DOCKER_FILE_POSTFIX }}
          docker push ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/token-plugin-build:${{ env.DOCKER_FILE_POSTFIX }}
          mkdir -p ${GITHUB_WORKSPACE}/cache
          touch ${GITHUB_WORKSPACE}/cache/${{ env.CACHE_KEY_BUILD }}

  lint-image:
    # Reference to workflow-setup job is required to access its various outputs.
    needs: workflow-setup
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
      CACHE_KEY_LINT: ${{ needs.workflow-setup.outputs.CACHE_KEY_LINT }}
      GITHUB_REPOSITORY_NAME: ${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }}
      DOCKER_FILE_POSTFIX: ${{ needs.workflow-setup.outputs.DOCKER_FILE_POSTFIX }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Try load from cache.
        id: cache-image
        uses: actions/cache@v2
        with:
          path: ${GITHUB_WORKSPACE}/cache
          key: ${{ env.CACHE_KEY_LINT}}

      - name: If NOT found in cache, build and push image.
        if: steps.cache-image.outputs.cache-hit != 'true'
        run: |
          export GITHUB_REPOSITORY_NAME=$(echo ${GITHUB_REPOSITORY,,})
          echo ${{ secrets.CR_PAT }} | docker login ghcr.io --username ${{ secrets.CR_USER }} --password-stdin
          docker build -f .github/workflows/lint/Dockerfile.${{ env.DOCKER_FILE_POSTFIX }} --no-cache -t ${{ env.GITHUB_REPOSITORY_NAME }}/token-plugin-lint:${{ env.CACHE_KEY_LINT }} .
          docker tag ${{ env.GITHUB_REPOSITORY_NAME }}/token-plugin-lint:${{ env.CACHE_KEY_LINT }} ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/token-plugin-lint:${{ env.DOCKER_FILE_POSTFIX }}
          docker push ghcr.io/${{ env.GITHUB_REPOSITORY_NAME }}/token-plugin-lint:${{ env.DOCKER_FILE_POSTFIX }}
          mkdir -p ${GITHUB_WORKSPACE}/cache
          touch ${GITHUB_WORKSPACE}/cache/${{ env.CACHE_KEY_LINT }}

  token_plugin_tests:
    name: Token Plugin Tests
    # Reference to workflow-setup job is required to access the GITHUB_REPOSITORY_NAME output.
    needs: [workflow-setup, build-image]
    runs-on: ubuntu-20.04
    # Fix for scacap/action-surefire-report out of memory error:
    # - https://github.com/ScaCap/action-surefire-report/issues/17
    env:
      DOCKER_FILE_POSTFIX: ${{ needs.workflow-setup.outputs.DOCKER_FILE_POSTFIX }}
    container:
      image: ghcr.io/${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }}/token-plugin-build:${{ needs.workflow-setup.outputs.DOCKER_FILE_POSTFIX }}
    strategy:
      matrix:
        module: [sovtoken, sovtokenfees]
      fail-fast: false
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          pip install -U -e sovtoken
          pip install -U -e sovtokenfees

      - name: Run Token Plugin ${{ matrix.module }}
        id: token-plugin-test
        run: python3 -m pytest -l -vv --junitxml=test-result-token-plugin-${{ matrix.module }}.xml ${{ matrix.module }}

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1.0.7
        continue-on-error: true
        with:
          check_name: Token Plugin ${{ matrix.module }} Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: test-result-token-plugin-${{ matrix.module }}.xml

  lint:
    name: Lint
    # Reference to workflow-setup job is required to access the GITHUB_REPOSITORY_NAME output.
    needs: [workflow-setup, lint-image]
    runs-on: ubuntu-20.04
    env:
      DOCKER_FILE_POSTFIX: ${{ needs.workflow-setup.outputs.DOCKER_FILE_POSTFIX }}
    container:
      image: ghcr.io/${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }}/token-plugin-lint:${{ needs.workflow-setup.outputs.DOCKER_FILE_POSTFIX }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: flake8
        run: python3 -m flake8
  build_token_plugin_release:
    name: Token Plugin Release
    needs: [workflow-setup, build-image, token_plugin_tests]
    runs-on: ubuntu-20.04
    env:
      DOCKER_FILE_POSTFIX: ${{ needs.workflow-setup.outputs.DOCKER_FILE_POSTFIX }}
    container:
      image: ghcr.io/${{ needs.workflow-setup.outputs.GITHUB_REPOSITORY_NAME }}/token-plugin-build:${{ needs.workflow-setup.outputs.DOCKER_FILE_POSTFIX }}
    strategy:
      fail-fast: false
    steps:
      - name: Check out code
        uses: actions/checkout@v1

      - name: Build Token Plugin deployment package
        run: |
          mkdir -p /tmp/build-output
          cd devops
          make package FPM_P_VERSION=latest
          mv ./*.deb /tmp/build-output
      - uses: actions/upload-artifact@v2
        with:
          name: token-deb
          path: /tmp/build-output
